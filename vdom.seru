from renderable import renderableVirtualNode
from types import VirtualNode, SafeHTML

function A(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{tagName: 'a', props: props, children: childStream}
}

function Span(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{tagName: 'span', props: props, children: childStream}
}

function Div(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{tagName: 'div', props: props, children: childStream}
}

function Img(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{tagName: 'img', props: props, children: childStream}
}

function Select(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{tagName: 'select', props: props, children: childStream}
}

function Option(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{tagName: 'option', props: props, children: childStream}
}

function Style(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{tagName: 'style', props: props, children: childStream}
}

function Button(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{tagName: 'button', props: props, children: childStream}
}

function TextArea(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{
		tagName: 'textarea',
		props: props,
		children: childStream,
	}
}

function IFrame(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{tagName: 'iframe', props: props, children: childStream}
}

function Pre(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{tagName: 'pre', props: props, children: childStream}
}

function Nav(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{tagName: 'nav', props: props, children: childStream}
}

function Ul(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{tagName: 'ul', props: props, children: childStream}
}

function Li(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{tagName: 'li', props: props, children: childStream}
}

function Input(props []{any}, childStream any*) renderableVirtualNode {
	return renderableVirtualNode{tagName: 'input', props: props, children: childStream}
}

struct safeHTMLProps {
	TagName string?
}

/**
 * MarkSafe represents an element added to the DOM tree containing the given `rawHTML`,
 * unescaped. If `TagName` is unspecified in `props`, then the HTML is wrapped in a span.
 *
 * NOTE: Be *very careful* with the HTML given here, as it will *not* be escaped or checked
 * in *any* fashion.
 */
function MarkSafe(props safeHTMLProps, rawHTML string) VirtualNode {
	return VirtualNode{
		TagName: props.TagName ?? 'span',
		SafeHTMLContents: SafeHTML(rawHTML),
	}
}
